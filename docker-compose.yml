# Create .env file in home directory so that compose will take some important values.

# POSTGRESQL_SERVER=localhost
# POSTGRESQL_PORT=5432
# POSTGRESQL_DATABASE=sitreps
# POSTGRESQL_USER=admin
# POSTGRESQL_PASSWORD=admin
# GF_AUTH_BASIC_ENABLED='true'
# GF_SECURITY_ADMIN_USER=admin
# GF_SECURITY_ADMIN_PASSWORD=admin
# GF_AUTH_ANONYMOUS_ENABLED='true'
# GF_AUTH_ANONYMOUS_ORG_ROLE='Viewer'

version: '3.8'
services:
  db:
    image: registry.redhat.io/rhel9/postgresql-15:1-68
    volumes:
      - postgres_data:/var/lib/pgsql/data
    expose:
      - 5432
    ports:
      - 5432:5432
    env_file:
      - '.env'

  grafana:
    image: quay.io/insights-qe/sitreps-grafana:10.3.6
    expose:
      - 3000
      - 8000
    ports:
      - 3000:3000
    env_file:
      - '.env'
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - db

  backend:
    image: localhost/sitreps-server:local
    build:
      context: .
#      dockerfile: docker/Dockerfile.server
      dockerfile: docker/Dockerfile.server.local
    # wait for postgres
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 2; done; alembic upgrade head && uvicorn sitreps_server.main:app --host 0.0.0.0 --reload'
    ports:
      - 8000:8000
    volumes:
      - ./:/sitreps:z
    env_file:
      - '.env'
    environment:
      # Overwrite server config coming from .env file so that it will be in network.
      - POSTGRESQL_SERVER=db
    depends_on:
      - db
      - grafana

volumes:
  postgres_data:
  grafana_data:
